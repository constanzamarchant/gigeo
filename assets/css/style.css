@charset "UTF-8";
/**
  * Patrón 7-1
  *
  * Esta es la estructura del patrón 7-1 utilizado en DesafíoLatam
  * para la enseñanza del uso correcto de patrones dentro de CSS y
  * también para la utilización de éste dentro de estructuras de 
  * trabajo colaborativo.
  *
  * @author Cristóbal Domínguez <cristobald@me.com>
  * @since 1.0
  *
  */
/*
 *
 * La carpeta abstracts/ reune todas las herramientas de SASS para el proyecto.
 * Cada variable global, función, mixin o placeholder debería estar aquí dentro.
 * 
 * La regla de oro para esta carpeta es que no deberá imprimir ni una sola línea
 * de código en el momento de la compilación del CSS. Nada como los helpers de Sass.
 * 
 * Cuando se trabaja en un proyecto muy grande con muchos archivos abstracts, podría
 * ser más interesante agruparlos por tópicos en vez de por tipo. Un ejemplo sería
 * crear las instancias typography (_typography.scss), theming (_theming.scss), etc.
 * Cada archivo contendría todos los helpers relacionados a esa instancia: variables, 
 * functions, mixins y placeholders. Hacerlo así podría hacer el código más sencillo de 
 * de mantener, especialmente cuando los archivos empiezan a crecer mucho.
 * 
 * Nota:
 * La carpeta abstracts/ podría llamarse utilities/ o helpers/, dependiendo de lo que
 * se prefiera.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 *
 */
/*
 *
 * La mayoría de los proyectos tienen una carpeta vendors/ que contiene
 * todos los archivos CSS de librerías externas y frameworks – Normalize,
 * Bootstrap, jQuery, jQueryUI, Flickity, Flexslider y así sucesivamente.
 * Agregando estos en una carpeta aparte podría ser una buena forma de 
 * decir: “Hey, esto no es mío, no es mi código, no es mi responsabilidad”.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 *
 */
/*
 *
 * Este archivo contiene las referencias del código boilerplate de tu proyecto.
 * Aquí podrás encontrar referencias al archivo _reset.scss, a las tipografías
 * y probablemente algún otro archivo de estilos que defina de una forma estándard
 * los estilos de elementos usados en HTML.
 *
 *
 * Nota: 
 * Si tu proyecto usa muchas animaciones, deberías considerar agregar dentro de
 * esta carpeta un archivo /_animations.scss que contenga las definiciones de los
 * @keyframes de todas tus animaciones.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 *
 */
body {
  margin: 0;
  padding: 0;
}

img {
  max-width: 100%;
}

/*
 *
 * En sitios/aplicaciones grandes es usual tener distintos temas o 
 * themes implementados. Hay diferentes caminos para lidiar con ese
 * problema, sin embargo uno de los más sencillos, a mi parecer, sería
 * tener cada theme dentro de su carpeta.
 * 
 * Nota:
 * La creación de esta carpeta es muy específica a cada proyecto, 
 * probablemente la mayoría de los sitio/aplicaciones no la necesitarán.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 *
 */
/*
 *
 * Esta carpeta contiene todo lo que hace relación con el sitio web o la aplicación.
 * Aquí encontrarás los estilos para las partes principales del sitio (header, footer, 
 * navigation, sidebar, etc), el sistema de grillas o incluso los estilos de los formularios
 *
 *
 * Nota:
 * La carpeta layout/ también podría ser llamada partials/, dependiendo de la 
 * preferencia del desarrollador.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 *
 */
.main_nav__container {
  display: flex;
  justify-content: space-between;
  padding: 2rem 7rem;
}
.main_nav__icons {
  align-self: center;
}

.logo {
  flex: 1;
}

.nav ul li {
  display: inline-block;
  padding: 0 1em;
  font-family: monospace;
  font-weight: bold;
}

.toggler {
  align-self: center;
  margin-bottom: 0.6rem;
  margin-left: 1rem;
}

@media all and (max-width: 576px) {
  .main_nav__icons {
    display: none;
  }
  .main_nav__container {
    padding: 2rem;
  }
}
.main_hero__container {
  background-image: url("../images/image-banner.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  padding-bottom: 15rem;
}

.profile__container {
  display: flex;
  justify-content: space-between;
  padding: 2rem 7rem;
}
.profile__image {
  background-image: url("../images/profile-image.png");
  width: 80px;
  height: 80px;
  border-radius: 50%;
  background-size: cover;
  background-position: center;
}
.profile__title {
  font-family: "Montserrat", sans-serif;
  font-weight: bold;
  font-size: 18px;
}
.profile__followers {
  font-size: 12px;
  font-family: "Montserrat", sans-serif;
  color: gray;
}

.desc {
  flex: 1;
  align-self: center;
  margin-left: 2rem;
}

.btns {
  color: white;
  font-family: "Montserrat", sans-serif;
  font-size: 16px;
  align-self: center;
}
.btns__btn--primary {
  display: inline-block;
  padding: 0.5rem;
  background-color: #92dce5;
}
.btns__btn--secondary {
  margin-left: 0.5rem;
  display: inline-block;
  padding: 0.5rem;
  background-color: #ef6461;
}

.separator {
  border: 0.1px solid silver;
}

@media all and (max-width: 576px) {
  .btns {
    display: none;
  }

  .profile__container {
    padding: 2rem;
  }
}
.main_videos__container {
  display: flex;
  justify-content: center;
  padding: 2rem 5rem;
  flex-wrap: wrap;
}
.main_videos__title {
  font-family: "Montserrat", sans-serif;
  font-size: 20px;
  margin-bottom: 2rem;
}
.main_videos__thumb {
  width: 250px;
  height: 150px;
  background-size: cover;
  background-position: center;
}
.main_videos__subtitle {
  font-family: "Montserrat", sans-serif;
  font-weight: bold;
  font-size: 14px;
}
.main_videos__views {
  font-size: 14px;
  font-family: "Montserrat", sans-serif;
  color: gray;
}

.item {
  align-self: end;
  margin: 2rem;
}

/*
 * 
 * Esta carpeta fue creada para componentes o módulos pequeños como por ejemplo: 
 * sliders, loaders, widgets, etc. A diferencia de la carpeta layout/ donde almacenaremos
 * los componentes que definan el wireframe del sitio/aplicación, aquí encontraremos
 * componentes que aportarán más contenido que una estructura visual.
 * 
 * Usualmente deberían haber muchos archivos en components/ debido a que los 
 * sitios/aplicaciones se empezaron a crear en base a pequeños módulos de código.
 * 
 * Nota:
 * Esta carpeta también se podría llamar modules/, dependiendo de cómo tu la prefieras.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 *
 */
/*
 *
 * Si prefieres estilos de páginas específicas, es mejor ponerlos en la carpeta pages/.
 * Por cierto, es común tener estilos muy específicos para cada página, como por ejemplo:
 * home, de ahí la necesidad de crear un archivo _home.scss dentro de pages/.
 * 
 * Nota:
 * Dependiendo del proceso de tu desarrollo, estos archivos podrían ser cargados de forma
 * paralela al archivo de estilos principal, evitando juntarlos con los del estilo principal.
 * Sin embargo es una decisión de cada uno o de cada proyecto.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 *
 */

/*# sourceMappingURL=style.css.map */
